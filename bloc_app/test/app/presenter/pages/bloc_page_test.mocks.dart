// Mocks generated by Mockito 5.0.16 from annotations
// in bloc_app/test/app/presenter/pages/bloc_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:core/app/domain/domain.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

import 'bloc_page_test.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [GithubUserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGithubUserRepository extends _i1.Mock
    implements _i2.GithubUserRepository {
  MockGithubUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String toString() => super.toString();
  @override
  _i3.Future<List<_i4.GithubUserEntity>> getUsers() => (super.noSuchMethod(
      Invocation.method(#getUsers, []),
      returnValue: Future<List<_i4.GithubUserEntity>>.value(
          <_i4.GithubUserEntity>[])) as _i3.Future<List<_i4.GithubUserEntity>>);
}
